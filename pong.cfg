MEMORY {
    ZP:     start=$0000, size=$0100, type=rw          , define=yes;
   #OAM:    start=$0200, size=$0100                   , define=yes;
    RAM:    start=$0300, size=$0400                   , define=yes;
    HEADER: start=$0000, size=$0010, file=%O, fill=yes            ;
    PRG:    start=$8000, size=$8000, file=%O, fill=yes, define=yes;
    CHR:    start=$0000, size=$2000, file=%O, fill=yes            ;
}

SEGMENTS {
    HEADER:   load = HEADER,             type = ro;
    STARTUP:  load = PRG,                type = ro,  define = yes;
    CODE:     load = PRG,                type = ro,  define = yes;
    RODATA:   load = PRG,                type = ro,  define = yes;
    ONCE:     load = PRG,                type = ro,  define = yes;
    DATA:     load = PRG, run = RAM,     type = rw,  define = yes;
    VECTORS:  load = PRG, start = $fffa, type = ro;
    CHARS:    load = CHR,                type = rw;
    BSS:      load = RAM,                type = bss, define = yes;
    ZEROPAGE: load = ZP,                 type = zp;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}

SYMBOLS {
    __STACKSIZE__:   type = weak, value = $0100;
    __STACK_START__: type = weak, value = $0700;

    NES_MAPPER:    type = weak, value = 0;
    NES_PRG_BANKS: type = weak, value = 2;
    NES_CHR_BANKS: type = weak, value = 1;
    NES_MIRRORING: type = weak, value = 1;
}
